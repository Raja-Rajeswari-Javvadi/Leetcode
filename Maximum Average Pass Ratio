import heapq

class Solution:
    def maxAverageRatio(self, classes: list[list[int]], extraStudents: int) -> float:
        # Max-heap to store (-gain, pass, total)
        max_heap = []
        for p, t in classes:
            gain = (p + 1) / (t + 1) - p / t
            heapq.heappush(max_heap, (-gain, p, t))

        for _ in range(extraStudents):
            neg_gain, p, t = heapq.heappop(max_heap)
            p += 1
            t += 1
            new_gain = (p + 1) / (t + 1) - p / t
            heapq.heappush(max_heap, (-new_gain, p, t))

        total_ratio = 0
        for neg_gain, p, t in max_heap:
            total_ratio += p / t

        return total_ratio / len(classes)
